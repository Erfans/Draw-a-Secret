{"version":3,"sources":["util.js","das.js","bdas.js"],"names":["Util","output","objects","forEach","object","Object","assign","element","type","listener","options","split","evt","addEventListener","DAS","BDAS","bgImageIds","inputPasswordId","numberOfRows","numberOfColumns","onChange","onClear","hashFn","config","extends","defaultConfig","pathString","isTouching","lastPosition","x","y","imgNum","self","input","document","getElementById","imgId","img","drawASecret","num","cw","Math","floor","width","rh","height","draggable","ondragstart","event","preventDefault","data","makeString","top","offsetTop","left","offsetLeft","offset","columnWidth","rowHeight","touches","bounding","target","getBoundingClientRect","currentPosition","clientX","clientY","value"],"mappings":"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","file":"das.js","sourcesContent":["/**\r\n * Util class\r\n */\r\nclass Util {\r\n  /**\r\n   * Create an object and extend it by arg objects\r\n   * @param objects\r\n   * @return {{} & *[]}\r\n   */\r\n  static extends (...objects) {\r\n    let output = {}\r\n\r\n    objects.forEach(function (object) {\r\n      output = Object.assign(output, object)\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  /**\r\n   * Add multiple event listener to elements\r\n   *\r\n   * @param element\r\n   * @param type: string\r\n   * @param listener: EventListenerOrEventListenerObject\r\n   * @param options?: boolean | AddEventListenerOptions\r\n   * @return void\r\n   */\r\n  static addEventListener (element, type, listener, options) {\r\n    type.split(' ').forEach(function (evt) {\r\n      element.addEventListener(evt, listener, options)\r\n    })\r\n  }\r\n}\r\n\r\nexport {Util}\r\n","/**\r\n * Base class for \"draw a secrets\" implementations\r\n */\r\nclass DAS {\r\n  /**\r\n   * Version number\r\n   * @returns {string}\r\n   * @constructor\r\n   */\r\n  static get version () {\r\n    return '1.2.0'\r\n  }\r\n}\r\n\r\nexport {DAS}\r\n","import {DAS} from './das'\r\nimport {Util} from './util'\r\n\r\n/**\r\n * Background draw-a-secret\r\n */\r\nclass BDAS extends DAS {\r\n  /**\r\n   * Default config\r\n   *\r\n   * @returns {{bgImageIds: Array, inputPasswordId: null, numberOfRows: number, numberOfColumns: number, onChange:\r\n   *   null, onClear: null, hashFn: null}}\r\n   */\r\n  static get defaultConfig () {\r\n    return {\r\n      bgImageIds: [],\r\n      inputPasswordId: null,\r\n      numberOfRows: 15,\r\n      numberOfColumns: 15,\r\n      onChange: null,\r\n      onClear: null,\r\n      hashFn: null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {{bgImageIds: Array, inputPasswordId: null, numberOfRows: number, numberOfColumns: number, onChange:\r\n   *   null, onClear: null, hashFn: null}} config\r\n   */\r\n  constructor (config) {\r\n    super()\r\n\r\n    config = Util.extends(BDAS.defaultConfig, config)\r\n\r\n    this.bgImageIds = typeof config.bgImageIds === 'string' ? [config.bgImageIds] : config.bgImageIds\r\n    this.inputPasswordId = config.inputPasswordId\r\n    this.numberOfRows = config.numberOfRows\r\n    this.numberOfColumns = config.numberOfColumns\r\n    this.onChange = config.onChange\r\n    this.onClear = config.onClear\r\n    this.hashFn = config.hashFn\r\n\r\n    this.pathString = ''\r\n    this.isTouching = false\r\n    this.lastPosition = {\r\n      x: -1,\r\n      y: -1\r\n    }\r\n\r\n    let imgNum = 0\r\n    const self = this\r\n\r\n    this.input = document.getElementById(this.inputPasswordId)\r\n\r\n    for (const imgId of this.bgImageIds) {\r\n      const img = document.getElementById(imgId)\r\n\r\n      img.drawASecret = {\r\n        num: imgNum++,\r\n        cw: Math.floor(img.width / this.numberOfColumns),\r\n        rh: Math.floor(img.height / this.numberOfRows)\r\n      }\r\n\r\n      // disable dragging images\r\n      img.draggable = false\r\n      img.ondragstart = function () { return false }\r\n\r\n      Util.addEventListener(img, 'touchstart mousedown', function (event) {\r\n        event.preventDefault()\r\n        let data = this.drawASecret\r\n        self.makeString(event, {top: this.offsetTop, left: this.offsetLeft}, data.cw, data.rh, data.num)\r\n        self.isTouching = true\r\n      }, false)\r\n\r\n      Util.addEventListener(img, 'touchmove mousemove', function (event) {\r\n        event.preventDefault()\r\n        if (self.isTouching) {\r\n          let data = this.drawASecret\r\n          self.makeString(event, {top: this.offsetTop, left: this.offsetLeft}, data.cw, data.rh, data.num)\r\n\r\n          // call on change\r\n          if (self.onChange && typeof self.onChange === 'function') {\r\n            self.options.onChange()\r\n          }\r\n        }\r\n      })\r\n\r\n      // notice: arrow functions have lexical context\r\n      Util.addEventListener(img, 'touchend mouseup', (event) => {\r\n        event.preventDefault()\r\n        this.isTouching = false\r\n      })\r\n    }\r\n\r\n    // notice: arrow functions have lexical context\r\n    Util.addEventListener(document, 'touchend mouseup', () => {\r\n      this.lastPosition = {\r\n        x: -1,\r\n        y: -1\r\n      }\r\n      this.isTouching = false\r\n    })\r\n  }\r\n\r\n  makeString (event, offset, columnWidth, rowHeight, imgNum) {\r\n    let lastPosition = this.lastPosition\r\n    let data = event.touches ? event.touches[0] : event\r\n\r\n    let bounding = data.target.getBoundingClientRect()\r\n    let currentPosition = {\r\n      x: Math.floor((data.clientX - bounding.left) / columnWidth),\r\n      y: Math.floor((data.clientY - bounding.top) / rowHeight)\r\n    }\r\n\r\n    if (lastPosition.x !== currentPosition.x || lastPosition.y !== currentPosition.y) {\r\n      this.pathString += '' + imgNum + currentPosition.x + currentPosition.y\r\n\r\n      if (this.input) {\r\n        this.input.value = this.hashFn ? this.hashFn(this.pathString) : this.pathString\r\n      }\r\n\r\n      this.lastPosition = currentPosition\r\n    }\r\n  }\r\n\r\n  clearPassword () {\r\n    this.pathString = ''\r\n    if (this.input) {\r\n      this.input.value = ''\r\n    }\r\n\r\n    if (this.onClear && typeof this.onClear === 'function') {\r\n      this.onClear()\r\n    }\r\n  }\r\n}\r\n\r\nexport {BDAS}\r\n"]}